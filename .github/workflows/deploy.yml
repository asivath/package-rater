name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies and build
        run: |
          yarn install
          yarn build

      - name: Archive build files
        run: |
          tar -czf app-dist.tar.gz ./app/dist
          tar -czf server-dist.tar.gz ./server/dist
          tar -czf shared-dist.tar.gz ./shared/dist
          tar -czf cli-dist.tar.gz ./cli/dist

      - name: Write SSH key to file
        run: |
          echo "${{ secrets.AWS_EC2_SSH_KEY }}" > /tmp/ec2_key.pem
          chmod 600 /tmp/ec2_key.pem

      - name: Copy build files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i /tmp/ec2_key.pem app-dist.tar.gz ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/app-dist.tar.gz
          scp -o StrictHostKeyChecking=no -i /tmp/ec2_key.pem server-dist.tar.gz ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/server-dist.tar.gz
          scp -o StrictHostKeyChecking=no -i /tmp/ec2_key.pem shared-dist.tar.gz ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/shared-dist.tar.gz
          scp -o StrictHostKeyChecking=no -i /tmp/ec2_key.pem cli-dist.tar.gz ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/cli-dist.tar.gz

      - name: Deploy to EC2
        run: |
          ssh -i /tmp/ec2_key.pem ubuntu@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            mkdir -p package-rater/app/dist
            mkdir -p package-rater/server/dist
            mkdir -p package-rater/shared/dist
            mkdir -p package-rater/cli/dist

            tar -xzf app-dist.tar.gz -C package-rater/app/dist
            tar -xzf server-dist.tar.gz -C package-rater/server/dist
            tar -xzf shared-dist.tar.gz -C package-rater/shared/dist
            tar -xzf cli-dist.tar.gz -C package-rater/cli/dist
            rm app-dist.tar.gz server-dist.tar.gz shared-dist.tar.gz cli-dist.tar.gz

            cd package-rater
            git pull
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            yarn install
            
            cd server
            echo "AWS_REGION=${{ secrets.AWS_REGION }}" > .env
            echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
            echo "NODE_ENV=prod" >> .env

            yarn restart
          EOF
